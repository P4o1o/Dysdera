extractors
=========================

This module contains some class for the extraction logic.

.. currentmodule:: dysdera.extractors
    
Classes
-------

Dysdera Extractor
^^^^^^^^^^^^^^^^^

.. autoclass:: DysderaExtractor
    :members:

    Abstract class for the information extractor.

    If you want to create a custom extractor, your extractor must be a subclass of
    :class:`DysderaExtractor` and implement the method :meth:`extract`.

    .. automethod:: DysderaExtractor.extract
        
        :param x: Web target to be extracted.
        :type x: :class:`dysdera.web.WebTarget`

        This method should be implemented by subclasses to define the logic for extracting information from a web target.

    .. automethod:: DysderaExtractor.page_to_dict

        :param x: Web target to be transformed into a dictionary.
        :type x: :class:`dysdera.web.WebTarget`
        :return: Dictionary containing information extracted from the web target.
        :rtype: dict

        Transform a `WebTarget` into a dictionary and returns it. The dictionary contains the following keys:

        - `url`: URL of the web target.
        - `domain`: Domain of the URL.
        - `name`: Page title extracted from the web target.
        - `titles`: Concatenated titles extracted from the web target.
        - `text`: Concatenated text content extracted from the web target.
        - `figcapt`: Concatenated figure captions extracted from the web target.
        - `links`: List of URLs extracted from the web target.
        - `canonical_url`: Canonical URL extracted from the web target.
        - `meta`: Metadata extracted from the web target.
        - `visited`: Date and time when the web target was visited.
        - `lastmod`: Date and time of the last modification of the web target.
        - `timestamp_UTC`: UTC timestamp of the last modification of the web target, if available.

Mongo Extractor
^^^^^^^^^^^^^^^

.. autoclass:: MongoExtractor
    :members:

    Extractor that saves crawl information in a MongoDB collection as a dict, see :meth:`DysderaExtractor.page_to_dict`.

    :param collection: AsyncIOMotorCollection to save crawl information.
    :type collection: :class:`motor.motor_asyncio.AsyncIOMotorCollection`
    :param save_if: Function to filter pages to be saved (default is to save all).
    :type save_if: Callable[[dict], bool]

Json Extractor
^^^^^^^^^^^^^^

.. autoclass:: JsonExtractor
    :members:

    Extractor that saves crawl information in a JSON file as a dict, see :meth:`DysderaExtractor.page_to_dict`.

    :param file: File to save crawl information.
    :type file: file-like object
    :param save_if: Function to filter pages to be saved (default is to save all).
    :type save_if: Callable[[dict], bool]

File Extractor
^^^^^^^^^^^^^^

.. autoclass:: FileExtractor
    :members:


    Extractor that save all files with one of the required extensions.

    :param extension: Required file extensions.
    :type extension: str
    :param output_dir: Output directory to save files (default is current directory).
    :type output_dir: str

